---
title: "UFC Data Exploration"
author: "Isaac Amouzou"
format: html
editor: visual
---

## Libraries

```{r}
library(tidyverse)
```

## Check data structure and missing

```{r}
data <- read_csv("Data/data.csv")

#get rid of paranthesis and replace slashes with . to have proper col names
names(data) <- names(data) %>%
  gsub("\\(|\\)", "", .) %>%   
  gsub("\\\\|/", ".", .) 
```

Variables are stored as numeric or categorical but some could be logical.

```{r}

#numeric columns with 3 or fewer unique values are casted as factor
data <- data %>%
  mutate(across(where(is.numeric), ~ if(length(unique(.)) <= 3) factor(.) else .))

summary_types <- sapply(data, class)

cat("Number of factor columns:", sum(summary_types == "factor"), "\n")
cat("Number of numeric columns:", sum(summary_types %in% c("numeric", "integer")), "\n")
cat("Number of character columns:", sum(summary_types == "character"), "\n")
```

```{r}
perc.missing <- sapply(data,
                          function(x){
                            mean(is.na(x)) * 100})

missing_df <- data.frame(
  perc_missing = perc.missing) %>% 
  arrange(desc(perc_missing))
head(missing_df)  
```

Nothing more than 23.73586% missing so this is good.

```{r}
na.omit(data) %>% dim()

```

3890 rows left when missing is removed (or about 64% of the dataset left)

```{r}
write.csv(na.omit(data), "Data/na_omitted_data.csv", row.names = FALSE)
```

```{r}
read_csv("Data/data.csv") %>%
  mutate(year = year(date)) %>%
  group_by(year) %>%
  summarize(
    red_wins = sum(Winner == "Red", na.rm = TRUE),
    total_fights = sum(Winner %in% c("Red", "Blue"), na.rm = TRUE),
    red_win_pct = 100 * red_wins / total_fights
  ) %>%
  ggplot(aes(x = year, y = red_win_pct)) +
  geom_line() +
  geom_point(aes(size = total_fights)) +
  labs(
    title = "Red Fighter Win Percentage by Year",
    x = "Year", y = "Red Win %",
    size = "Total Fights"
  ) +
  theme_minimal()
```

Prior to 2010, the ufc had no definition of Red and Blue fighters so in their dataset red fighters were automatically assigned to the winner.

Create dataset with imputed data (will drop datasets prior to 2010)

```{r}
data <- data %>% filter(lubridate::year(date) >= 2010)
numeric_cols <- names(data)[sapply(data, is.numeric)]
numeric_missing_cols <- numeric_cols[sapply(data[numeric_cols], function(x) any(is.na(x)))]
```

```{r}
library(mice)

(starttime <- Sys.time())

miters <- 3

#with 5 multiple imputations
imp <- mice(data, m = miters, method = "pmm", seed = 507, printFlag = F)

#get imputed datasets
completed_list <- lapply(1:miters, function(i) complete(imp, i))

#average datasets to get final imputation dataset

average_imputed <- completed_list[[1]]  

for (col in names(average_imputed)) {
  
  if (is.numeric(average_imputed[[col]])) {
    
    sum_col <- 0
    for(i in 1:length(completed_list)){
      sum_col <- sum_col + completed_list[[i]][[col]]
    }
    
    average_imputed[[col]] <- sum_col / length(completed_list)
  }
}

(endttime <- Sys.time())
```

```{r}
endttime - starttime
```

```{r}
data_numeric_imputed <- data
data_numeric_imputed[numeric_missing_cols] <- average_imputed[numeric_missing_cols]
data_numeric_imputed %>% na.omit(.) %>% dim(.)

```

4674/4768 or about 98% of the data retianed.

```{r}
write.csv(na.omit(data_numeric_imputed), "Data/data_numeric_imputed.csv", row.names = FALSE)
```
