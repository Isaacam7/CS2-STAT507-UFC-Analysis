---
title: "ufc_player_factor_cluster_pca_analysis"
format: html
editor: visual
---

## Set up

This is similar to the ufc_factor_cluster_pca analysis but on player stats

```{r}
library(tidyverse)
library(lubridate)
library(MASS)
library(mult)
```

### With NA omitted data

```{r}
na_omit <- read_csv("Data/na_omitted_data.csv") %>%
  #anything with 3 or less unique values should be a factor
  mutate(across(where(is.numeric), ~ if(length(unique(.)) <= 3) factor(.) else .))
```

```{r}
red_fighter_data <- na_omit %>%
  dplyr::select(fighter = R_fighter, date, starts_with("R_")) %>%
  rename_with(~str_remove(., "R_"), starts_with("R_"))

blue_fighter_data <- na_omit %>%
  dplyr::select(fighter = B_fighter, date, starts_with("B_")) %>%
  rename_with(~str_remove(., "B_"), starts_with("B_"))

fighter_data <- bind_rows(red_fighter_data, blue_fighter_data)

fighter_data <- fighter_data %>% arrange(date)

head(fighter_data)
```

```{r}

#creating datasets consisfting of fighter data for a given period of 5 years.

fighter_data <- fighter_data %>%
  mutate(period = floor((year(date) - 1995) / 5))  

#I need only the fighters most recent stats in a given 5 year period 

fighter_data_recent <- fighter_data %>%
  group_by(period, fighter) %>%
  arrange(desc(date), .by_group = TRUE) %>%
  slice(1) %>%  
  ungroup()

#split into different datasets for each period

fighter_list <- fighter_data_recent %>%
  group_split(period)

period_labels <- paste0(1995 + 5 * (0:(length(fighter_list) - 1)), "-", 1999 + 5 * (0:(length(fighter_list) - 1)))
names(fighter_list) <- period_labels
```

```{r}
# make sure no duplicate fighters

fighter_list %>%
  map_dfr(~ tibble(
    Unique_Fighters = n_distinct(.x$fighter),
    Total_Rows = nrow(.x)
  ), .id = "Period")
```

No duplicate fighters but years 1995-2004 have barely anybody, will continue with years after.

```{r}
periods_for_analysis <- c("2005-2009","2010-2014","2015-2019","2020-2024")

data1 <- fighter_list[[periods_for_analysis[1]]] %>% dplyr::select(is.numeric,-period)
data2 <- fighter_list[[periods_for_analysis[2]]] %>% dplyr::select(is.numeric,-period)
data3 <- fighter_list[[periods_for_analysis[3]]] %>% dplyr::select(is.numeric,-period)
data4 <- fighter_list[[periods_for_analysis[4]]] %>% dplyr::select(is.numeric,-period)
```

PCA Analysis for 2005-2009

```{r}
data1.pca.res <- prcomp(data1,
                          center=T,
                          scale.=T)

data1_explained_variance <- data1.pca.res$sdev^2 / sum(data1.pca.res$sdev^2)
which(cumsum(data1_explained_variance) >= 0.9)[1]
```

```{r}
plot(data1_explained_variance, xlab="# of Principal Component", ylab = "Proportion of Variance Explained", main = "Skree Plot for 2005-2009", ylim=c(0,1), type='b', col="blue", pch=19, lty=1)

grid(lty=1, nx = NA, ny = NULL)

lines(cumsum(data1_explained_variance), type='b', col="red", pch=19, lty=2)
legend("right", legend=c("Proportion of Variance Explained", "Cumulative Proportion of Variance Explained"), col=c("blue", "red"), pch=19, lty=1:2, xpd=TRUE)
```

PCA Analysis for 2010-2014

```{r}
data2.pca.res <- prcomp(data2,
                          center=T,
                          scale.=T)

data2_explained_variance <- data2.pca.res$sdev^2 / sum(data2.pca.res$sdev^2)
which(cumsum(data2_explained_variance) >= 0.9)[1]
```

```{r}
plot(data1_explained_variance, xlab="# of Principal Component", ylab = "Proportion of Variance Explained", main = "Skree Plot for 2010-2014", ylim=c(0,1), type='b', col="blue", pch=19, lty=1)

grid(lty=1, nx = NA, ny = NULL)

lines(cumsum(data1_explained_variance), type='b', col="red", pch=19, lty=2)
legend("right", legend=c("Proportion of Variance Explained", "Cumulative Proportion of Variance Explained"), col=c("blue", "red"), pch=19, lty=1:2, xpd=TRUE)
```

PCA Analysis for 2015-2019

```{r}
data3.pca.res <- prcomp(data3,
                          center=T,
                          scale.=T)

data3_explained_variance <- data3.pca.res$sdev^2 / sum(data3.pca.res$sdev^2)
which(cumsum(data3_explained_variance) >= 0.9)[1]
```

```{r}
plot(data1_explained_variance, xlab="# of Principal Component", ylab = "Proportion of Variance Explained", main = "Skree Plot for 2015-2019", ylim=c(0,1), type='b', col="blue", pch=19, lty=1)

grid(lty=1, nx = NA, ny = NULL)

lines(cumsum(data1_explained_variance), type='b', col="red", pch=19, lty=2)
legend("right", legend=c("Proportion of Variance Explained", "Cumulative Proportion of Variance Explained"), col=c("blue", "red"), pch=19, lty=1:2, xpd=TRUE)
```

PCA Analysis for 2020-2024

```{r}
data4.pca.res <- prcomp(data4,
                          center=T,
                          scale.=T)

data4_explained_variance <- data4.pca.res$sdev^2 / sum(data4.pca.res$sdev^2)
which(cumsum(data4_explained_variance) >= 0.9)[1]
```

```{r}
plot(data1_explained_variance, xlab="# of Principal Component", ylab = "Proportion of Variance Explained", main = "Skree Plot for 2020-2024", ylim=c(0,1), type='b', col="blue", pch=19, lty=1)

grid(lty=1, nx = NA, ny = NULL)

lines(cumsum(data1_explained_variance), type='b', col="red", pch=19, lty=2)
legend("right", legend=c("Proportion of Variance Explained", "Cumulative Proportion of Variance Explained"), col=c("blue", "red"), pch=19, lty=1:2, xpd=TRUE)
```

```{r}
(kaisers_rule1 <- length(which(data1.pca.res$sdev^2 > 1)))
(kaisers_rule2 <- length(which(data2.pca.res$sdev^2 > 1)))
(kaisers_rule3 <- length(which(data3.pca.res$sdev^2 > 1)))
(kaisers_rule4 <- length(which(data4.pca.res$sdev^2 > 1)))
```

Same rule for each.
